name: Build and Release Rust Binaries

on:
  release:
    types:
      - created

jobs:
  build:
    name: Build and Upload Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install OpenSSL on Ubuntu
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt install -y cmake pkg-config libssl-dev

      - name: Install dependencies on macOS
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew update
          brew install openssl cmake
          sudo xcode-select --install || echo "Xcode Command Line Tools already installed"
          echo "OPENSSL_DIR=$(brew --prefix openssl)" >> $GITHUB_ENV

      - name: Install OpenSSL on Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          choco install openssl
          echo "OPENSSL_DIR=C:\\Program Files\\OpenSSL-Win64" >> $GITHUB_ENV

      - name: Install target
        run: rustup target add ${{ matrix.target }}

      - name: Build
        env:
          OPENSSL_DIR: ${{ env.OPENSSL_DIR }}
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact
        run: |
          mkdir -p dist
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            mv target/${{ matrix.target }}/release/*.exe dist/
          else
            mv target/${{ matrix.target }}/release/* dist/
          fi

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          token: ${{ secrets.GITHUB_TOKEN }}
