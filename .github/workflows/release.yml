name: Build and Release Rust Binaries
on:
  release:
    types:
      - created
jobs:
  build:
    name: Build and Upload Binaries
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install OpenSSL on Ubuntu
        if: '${{ matrix.os == ''ubuntu-latest'' }}'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake
          sudo apt-get install -y pkg-config
          sudo apt-get install -y libssl-dev
          sudo apt-get install -y openssl
      - name: Install dependencies on macOS
        if: '${{ matrix.os == ''macos-latest'' }}'
        run: >
          brew update

          brew install openssl cmake

          sudo xcode-select --install || echo "Xcode Command Line Tools already
          installed"
      - name: Install OpenSSL on Windows
        if: '${{ matrix.os == ''windows-latest'' }}'
        run: |
          choco install openssl
      - name: Install target
        run: 'rustup target add ${{ matrix.target }}'
      - name: Build
        run: cargo build --release
      - name: Prepare artifact
        if: '${{ matrix.os == ''windows-latest'' }}'
        run: |
          cd target/release
          tar.exe -a -c -f ${{ matrix.target }}.zip pk_editor.exe
      - name: Prepare artifact
        if: '${{ matrix.os != ''windows-latest'' }}'
        run: |
          cd target/release
          zip ${{ matrix.target }}.zip pk_editor
          ls
      - name: Upload release binaries
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "*.zip"
          update_latest_release: true
